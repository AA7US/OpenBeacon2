Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_mulsi3.o)
                              ./main.o (__mulsi3)
/usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_udivmodsi4.o)
                              ./main.o (__udivmodsi4)
/usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/crttn45.o (exit)
/usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/libc.a(memset.o)
                              ./main.o (memset)
/usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/libc.a(eerd_block_attiny45.o)
                              ./main.o (__eerd_block_tn45)

Allocating common symbols
Common symbol       size              file

msg_delay_end       0x4               ./main.o
timer               0x4               ./main.o
prev_state          0x1               ./main.o
dit_length          0x4               ./main.o
cur_mode            0x1               ./main.o
prev_state_end      0x4               ./main.o
prev_mode           0x1               ./main.o
cur_state           0x1               ./main.o
msg_delay           0x1               ./main.o
cur_state_end       0x4               ./main.o
dfcw_offset         0x1               ./main.o
wpm                 0x2               ./main.o
prev_msg_p          0x2               ./main.o
next_cwid           0x4               ./main.o
prev_wpm            0x2               ./main.o
cur_msg_p           0x2               ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/crttn45.o
LOAD ./main.o
LOAD /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/libc.a
LOAD /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x17e6
 *(.vectors)
 .vectors       0x0000000000000000       0x1e /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/crttn45.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x000000000000001e      0x229 ./main.o
                0x000000000000001e                morsechar
                0x0000000000000079                fontchar
                0x0000000000000240                hell_tune
                0x0000000000000248                . = ALIGN (0x2)
 *fill*         0x0000000000000247        0x1 00
                0x0000000000000248                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000248        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000248                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000248                __ctors_start = .
 *(.ctors)
                0x0000000000000248                __ctors_end = .
                0x0000000000000248                __dtors_start = .
 *(.dtors)
                0x0000000000000248                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000248        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/crttn45.o
                0x0000000000000248                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000248        0xc /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/crttn45.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000254       0x16 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_copy_data.o)
                0x0000000000000254                __do_copy_data
 .init4         0x000000000000026a       0x10 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_clear_bss.o)
                0x000000000000026a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000027a        0x4 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/crttn45.o
 *(.init9)
 *(.text)
 .text          0x000000000000027e        0x2 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/crttn45.o
                0x000000000000027e                __vector_1
                0x000000000000027e                __vector_12
                0x000000000000027e                __bad_interrupt
                0x000000000000027e                __vector_6
                0x000000000000027e                __vector_3
                0x000000000000027e                __vector_11
                0x000000000000027e                __vector_13
                0x000000000000027e                __vector_7
                0x000000000000027e                __vector_5
                0x000000000000027e                __vector_4
                0x000000000000027e                __vector_9
                0x000000000000027e                __vector_2
                0x000000000000027e                __vector_8
                0x000000000000027e                __vector_14
 .text          0x0000000000000280     0x14c0 ./main.o
                0x0000000000000280                __vector_10
                0x00000000000002fc                set_wpm
                0x0000000000000348                get_msg_delay
                0x000000000000037c                init_tx
                0x0000000000000414                debounce
                0x0000000000000536                reset_buffer
                0x0000000000000570                init_cwid
                0x0000000000000668                tx_on
                0x0000000000000688                tx_off
                0x00000000000006a8                main
 .text          0x0000000000001740        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_mulsi3.o)
 .text          0x0000000000001740        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_udivmodsi4.o)
 .text          0x0000000000001740        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_exit.o)
 .text          0x0000000000001740        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_copy_data.o)
 .text          0x0000000000001740        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_clear_bss.o)
 .text          0x0000000000001740        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/libc.a(memset.o)
 .text          0x0000000000001740        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/libc.a(eerd_block_attiny45.o)
                0x0000000000001740                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc.mul
                0x0000000000001740       0x32 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_mulsi3.o)
                0x0000000000001740                __mulsi3
 .text.libgcc.div
                0x0000000000001772        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_mulsi3.o)
 .text.libgcc   0x0000000000001772        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_mulsi3.o)
 .text.libgcc.prologue
                0x0000000000001772        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_mulsi3.o)
 .text.libgcc.builtins
                0x0000000000001772        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_mulsi3.o)
 .text.libgcc.fmul
                0x0000000000001772        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_mulsi3.o)
 .text.libgcc.mul
                0x0000000000001772        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x0000000000001772       0x44 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_udivmodsi4.o)
                0x0000000000001772                __udivmodsi4
 .text.libgcc   0x00000000000017b6        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x00000000000017b6        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x00000000000017b6        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x00000000000017b6        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_udivmodsi4.o)
 .text.libgcc.mul
                0x00000000000017b6        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000017b6        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000017b6        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000017b6        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000017b6        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000017b6        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000017b6        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000017b6        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000017b6        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000017b6        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000017b6        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000017b6        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000017b6        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000017b6        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000017b6        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000017b6        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000017b6        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000017b6        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000000000017b6        0xe /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/libc.a(memset.o)
                0x00000000000017b6                memset
 .text.avr-libc
                0x00000000000017c4       0x1e /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/libc.a(eerd_block_attiny45.o)
                0x00000000000017c4                __eerd_block_tn45
                0x00000000000017c8                __eerd_blraw_tn45
                0x00000000000017e2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000017e2        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_exit.o)
                0x00000000000017e2                exit
                0x00000000000017e2                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000017e2        0x4 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000017e6                _etext = .

.data           0x0000000000800060        0xa load address 0x00000000000017e6
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/crttn45.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_mulsi3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_clear_bss.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/libc.a(memset.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/libc.a(eerd_block_attiny45.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800060        0xa ./main.o
                0x0000000000800060                dit_speed
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x000000000080006a                . = ALIGN (0x2)
                0x000000000080006a                _edata = .
                0x000000000080006a                PROVIDE (__data_end, .)

.bss            0x000000000080006a       0x59
                0x000000000080006a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080006a        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/crttn45.o
 .bss           0x000000000080006a       0x33 ./main.o
                0x000000000080006a                cur_timer
                0x000000000080006e                cur_character
                0x000000000080006f                prev_character
                0x0000000000800070                cur_hell_char
                0x0000000000800071                cur_hell_col
                0x0000000000800072                cur_hell_row
                0x0000000000800073                cwid
 .bss           0x000000000080009d        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_mulsi3.o)
 .bss           0x000000000080009d        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_udivmodsi4.o)
 .bss           0x000000000080009d        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_exit.o)
 .bss           0x000000000080009d        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_copy_data.o)
 .bss           0x000000000080009d        0x0 /usr/lib/gcc/avr/4.7.0/avr25/libgcc.a(_clear_bss.o)
 .bss           0x000000000080009d        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/libc.a(memset.o)
 .bss           0x000000000080009d        0x0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/libc.a(eerd_block_attiny45.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080009d       0x26 ./main.o
                0x000000000080009d                msg_delay_end
                0x00000000008000a1                timer
                0x00000000008000a5                prev_state
                0x00000000008000a6                dit_length
                0x00000000008000aa                cur_mode
                0x00000000008000ab                prev_state_end
                0x00000000008000af                prev_mode
                0x00000000008000b0                cur_state
                0x00000000008000b1                msg_delay
                0x00000000008000b2                cur_state_end
                0x00000000008000b6                dfcw_offset
                0x00000000008000b7                wpm
                0x00000000008000b9                prev_msg_p
                0x00000000008000bb                next_cwid
                0x00000000008000bf                prev_wpm
                0x00000000008000c1                cur_msg_p
                0x00000000008000c3                PROVIDE (__bss_end, .)
                0x00000000000017e6                __data_load_start = LOADADDR (.data)
                0x00000000000017f0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000c3        0x0
                0x00000000008000c3                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008000c3                PROVIDE (__noinit_end, .)
                0x00000000008000c3                _end = .
                0x00000000008000c3                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000       0x29
 *(.eeprom*)
 .eeprom        0x0000000000810000       0x29 ./main.o
                0x0000000000810000                ee_msg_mem
                0x0000000000810029                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x1d58
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/crttn45.o
 .stab          0x00000000000006cc     0x1530 ./main.o
                                       0x153c (size before relaxing)
 .stab          0x0000000000001bfc       0x6c /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/libc.a(memset.o)
                                         0x78 (size before relaxing)
 .stab          0x0000000000001c68       0xf0 /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/libc.a(eerd_block_attiny45.o)
                                         0xfc (size before relaxing)

.stabstr        0x0000000000000000      0xe2b
 *(.stabstr)
 .stabstr       0x0000000000000000      0xe2b /usr/lib/gcc/avr/4.7.0/../../../avr/lib/avr25/crttn45.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./main.o
                                         0x12 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(OpenBeaconMini.elf elf32-avr)
LOAD linker stubs
